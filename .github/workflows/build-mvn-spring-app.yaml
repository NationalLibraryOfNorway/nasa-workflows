name: Build mvn Spring app

on:
  workflow_call:
    secrets:
        ARTIFACTORY_USER_NASA:
            required: true
        ARTIFACTORY_PASS_NASA:
            required: true
        PROXY_NB:
            required: true
        ARTIFACTORY_NB:
            required: true
        DOCKER_REGISTRY_NB:
            required: true
        DOCKER_HARBOR_USER_NASA:
            required: true
        DOCKER_HARBOR_PASS_NASA:
            required: true
        NVD_REPO:
            required: true

    outputs:
      build-tag:
        description: "Build tag"
        value: ${{ jobs.build-app.outputs.release-version }}
    inputs:
      java-version:
        required: false
        type: string
        description: Java version to build with
        default: '21'



jobs:
  build-app:
    name: Build app
    runs-on: self-hosted-linux
    services:
        docker:
          image: docker:dind
          options: --privileged
          ports:
            - 2375:2375
    container:
      image: ${MAVEN_IMAGE}
      options: --user root
    outputs:
      build-tag: ${{ steps.generate-build-tag.outputs.build-tag }}
    steps:

      # prebuild
      - name: Checkout code
        uses: actions/checkout@v4
        # checkout gir shallow copy - fetch-depth: 0 vil tilgjengeliggjÃ¸re tags
        with:
          fetch-depth: 0

      - name: set env
        run: |
          echo "PROXY_NB=${{ secrets.PROXY_NB }}" >> $GITHUB_ENV
          echo "DOCKER_REGISTRY_NB=${{ secrets.DOCKER_REGISTRY_NB }}" >> $GITHUB_ENV
          echo "DOCKER_HARBOR_USER_NASA=${{ secrets.DOCKER_HARBOR_USER_NASA }}" >> $GITHUB_ENV
          echo "DOCKER_HARBOR_PASS_NASA=${{ secrets.DOCKER_HARBOR_PASS_NASA }}" >> $GITHUB_ENV
          echo "NVD_REPO=${{ secrets.NVD_REPO }}" >> $GITHUB_ENV
          echo "ARTIFACTORY_USER=${{ secrets.ARTIFACTORY_USER_NASA }}" >> $GITHUB_ENV
          echo "ARTIFACTORY_PASS=${{ secrets.ARTIFACTORY_PASS_NASA }}" >> $GITHUB_ENV

      - name: Generate ~/.m2/repository cache key
        id: m2-cache-key
        run: echo "keyname=$(date +'maven-week-%U')" >> $GITHUB_OUTPUT

      - name: Cache ~/.m2/repository
        id: cache-m2-repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ steps.m2-cache-key.outputs.keyname }}

      - name: Create m2-settings
        uses: whelk-io/maven-settings-xml-action@9dc09b23833fa9aa7f27b63db287951856f3433d # v22
        with:
          servers: '[
            { "id": "snapshots", "username": "${{ secrets.ARTIFACTORY_USER_NASA }}", "password": "${{ secrets.ARTIFACTORY_PASS_NASA }}" },
            { "id": "releases", "username": "${{ secrets.ARTIFACTORY_USER_NASA }}", "password": "${{ secrets.ARTIFACTORY_PASS_NASA }}" }
          ]'
          repositories: '[
            { "id": "central", "url": "https://repo1.maven.org/maven2/", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } },
            { "id": "confluent", "url": "https://packages.confluent.io/maven/" },
            { "id": "jitpack", "url": "https://jitpack.io" },
            { "id": "shibboleth", "url": "https://build.shibboleth.net/nexus/content/repositories/releases/" }
          ]'
          proxies: '[
            { "id": "nb-proxy-http", "active": "true", "protocol": "http", "host": "${{ vars.PROXY_HOST_NB }}", "port": "${{ vars.PROXY_PORT_NB }}", "nonProxyHosts": "localhost|127.0.0.1|docker"},
            { "id": "nb-proxy-https", "active": "true", "protocol": "https", "host": "${{ vars.PROXY_HOST_NB }}", "port": "${{ vars.PROXY_PORT_NB }}", "nonProxyHosts": "localhost|127.0.0.1|docker"}
          ]'
          output_file: settings.xml

      - name: Download toolchain file
        run: |
          curl -s https://raw.githubusercontent.com/NationalLibraryOfNorway/nasa-workflows/main/resources/toolchains.xml --output toolchains.xml

      - name: Generate build tag
        id: generate-build-tag
        run: |
          export MAVEN_VERSION=`mvn -s settings.xml --global-toolchains toolchains.xml --batch-mode --no-transfer-progress -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec | grep -o '[0-9]*\.[0-9]*\.[0-9]*'`
          export BUILD_TAG=${MAVEN_VERSION}-${{ github.run_number }}
          echo "Setting Build tag $BUILD_TAG"
          echo "build-tag=$(echo $BUILD_TAG)" >> $GITHUB_OUTPUT

      # maven build
      - name: Set maven artifact version
        run: |
          mvn -s settings.xml --global-toolchains toolchains.xml --no-transfer-progress versions:set -DnewVersion="${{ steps.generate-build-tag.outputs.build-tag }}"
          mvn -s settings.xml --global-toolchains toolchains.xml --no-transfer-progress versions:commit

      - name: Build with Maven # --global-toolchains toolchains.xml
        run: mvn -s settings.xml --global-toolchains toolchains.xml --no-transfer-progress --batch-mode --update-snapshots  package

      # Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v4.1.0
        with:
          settings-file: settings.xml

     # docker build
      - name: Build docker image
        run: | # 
          export DOCKER_POM=`grep -ril "publishRegistry" --include pom.xml`
          if [ $DOCKER_POM ]; then mvn --no-transfer-progress -s settings.xml --global-toolchains toolchains.xml  -f $DOCKER_POM spring-boot:build-image -Dmaven.test.skip=true -Ddependency-check.skip=true -Dspring-boot.build-image.publish=true; fi